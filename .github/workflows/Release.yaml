name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic_release.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "*"

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/changelog conventional-changelog-conventionalcommits @semantic-release/git

      - name: Get next version
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(semantic-release --dry-run | grep "next release version is" | sed -E 's/.* ([0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?).*/\1/')
          echo -e "\033[1;32mDry run version: $version\033[0m"
          if [ ! -z "$version" ]; then
            echo "version=$version" >> $GITHUB_OUTPUT
          fi

  build:
    needs: version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: app
            context: .
            file: ./app/Dockerfile
          - name: backend
            context: backend
            file: ./backend/Dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: ${{ github.event_name == 'push' && needs.version.outputs.version != '' }}
          tags: |
            ghcr.io/operational-co/operational.co-${{ matrix.name }}:${{ needs.version.outputs.version || '0.0.0' }}
            ghcr.io/operational-co/operational.co-${{ matrix.name }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ needs.version.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}

  release:
    needs: [version, build]
    if: needs.version.outputs.version != '' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "*"

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/changelog conventional-changelog-conventionalcommits @semantic-release/git

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release
